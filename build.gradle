// Reference https://www.jetbrains.org/intellij/sdk/docs/tutorials/build_system/gradle_guide.html
import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.30'
    id 'org.jetbrains.intellij' version '1.1.4'     // https://github.com/JetBrains/gradle-intellij-plugin/releases
}

ext {
    isWindows = Os.isFamily(Os.FAMILY_WINDOWS)
    rdLibDirectory = {
        new File(intellij.getIdeaDependency(project).classes, "lib/rd")
    }
}

repositories {
    maven { url 'https://cache-redirector.jetbrains.com/intellij-repository/snapshots' }
    maven { url 'https://cache-redirector.jetbrains.com/maven-central' }
}

wrapper {
    gradleVersion = '7.1'
    distributionType = Wrapper.DistributionType.ALL
    distributionUrl = "https://cache-redirector.jetbrains.com/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

version = ext.PluginVersion

sourceSets {
    main {
        java.srcDir 'src/rider/main/java'
        kotlin.srcDir 'src/rider/main/kotlin'
        resources.srcDir 'src/rider/main/resources'
    }
}

compileKotlin {
    kotlinOptions { jvmTarget = "1.8" }
}

intellij {
    type = 'RD'
    version = "${ProductVersion}"
    downloadSources = false
    instrumentCode = false
    // TODO: add plugins
    plugins = ["terminal"]
    updateSinceUntilBuild = false
}

runIde {
    // Match Rider's default heap size of 1.5Gb (default for runIde is 512Mb)
    maxHeapSize = "1500m"

    // Rider's backend doesn't support dynamic plugins. It might be possible to work with auto-reload of the frontend
    // part of a plugin, but there are dangers about keeping plugins in sync
    autoReloadPlugins = false

    // gradle-intellij-plugin will download the default version of the JBR for the snapshot. Update if required
    // jbrVersion = "jbr_jcef-11_0_6b765.40" // https://confluence.jetbrains.com/display/JBR/Release+notes
}
